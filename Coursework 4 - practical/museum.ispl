-- Aran Montero 9540318
-- Pablo Pardos 843586
-- Jesse Hoiting 4443306

Semantics = SingleAssignment;
Agent Environment
    Vars:
        stolen: boolean;
    end Vars
    Actions = {noop};
    Protocol:
        Other : {noop};
    end Protocol
    Evolution:
       stolen= true if Thief.Action=steal;
    end Evolution
end Agent

Agent Guard
    Vars:
        location : {room0, room1, room2};
        direction : {left, right};
    end Vars
    Actions = {move_left, move_right};
    Protocol:
        location=room0 and direction=right : {move_right};
        location=room1 and direction=right : {move_right};
        location=room2 and direction=right : {move_left};
        location=room1 and direction=left : {move_left};
        location=room0 and direction=left : {move_right};
    end Protocol
    Evolution:
        location=room1 if location=room0 and Action=move_right;
        location=room2 if location=room1 and Action=move_right;
        location=room1 if location=room2 and Action=move_left;
        location=room0 if location=room1 and Action=move_left;
        direction=left if location=room2;
        direction=right if location=room0;
    end Evolution
end Agent

Agent Thief
    Vars:
        location : {room0, room1, room2, home};
    end Vars
    Actions = {move_left, move_right, wait, steal, exit};
    Protocol:
        location=room0 : {move_right, wait};
        location=room1 : {move_left, move_right, wait};
        location=room2 : {move_left, steal, exit, wait};
        location=home : {wait};
    end Protocol
    Evolution:
        location=room1 if location=room0 and Action=move_right;
        location=room2 if location=room1 and Action=move_right;
        location=room1 if location=room2 and Action=move_left;
        location=room0 if location=room1 and Action=move_left;
        location=home if location=room2 and Action=exit;
    end Evolution
end Agent

Evaluation
    stolen if Environment.stolen = true;
    detected if Environment.stolen = true and Guard.location=Thief.location and Guard.direction=right;
    escaped if Thief.location=home;
end Evaluation

InitStates
	Environment.stolen = false and Guard.location = room0 and Thief.location = room0;
end InitStates

Groups
    gT = { Thief };
    gG = { Guard };
    gTG = { Thief, Guard };
end Groups

Formulae
    -- Thief can steal and escape without being detected
    <gT> ((!detected) U (stolen and escaped));
end Formulae